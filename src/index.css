@tailwind base;
@tailwind components;
@tailwind utilities;
 
@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
 
    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;
 
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
 
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
 
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
 
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
 
    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;
 
    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;
 
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
 
    --ring: 222.2 84% 4.9%;
 
    --radius: 0.5rem;
  }
 
  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
 
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
 
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
 
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
 
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
 
    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;
 
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
 
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
 
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
 
    --ring: 212.7 26.8% 83.9%;
  }
}
 
@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

@layer utilities {
  .animate-carousel {
    animation: carousel 40s linear infinite;
  }
}

@keyframes carousel {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(calc(-100% / 2));
  }
}

@keyframes flow {
  from {
    stroke-dashoffset: 30;
  }
  to {
    stroke-dashoffset: 0;
  }
}

@keyframes pulse-shadow {
  0% {
    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(59, 130, 246, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0);
  }
}

/* Enhanced Network Visualization Styles */
.react-flow__node {
  transition: filter 0.2s ease, box-shadow 0.2s ease;
  will-change: transform;
  transform: translate3d(0, 0, 0);
  backface-visibility: hidden;
  transform-origin: center center;
}

.react-flow__node:not(.react-flow__node-dragging) {
  transition: filter 0.2s ease, box-shadow 0.2s ease;
  animation: node-settle 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
}

.react-flow__node.react-flow__node-dragging {
  transition: none;
  cursor: grabbing;
  z-index: 1000;
  filter: drop-shadow(0 8px 16px rgb(0 0 0 / 0.15));
}

.react-flow__node:hover {
  filter: drop-shadow(0 8px 16px rgb(0 0 0 / 0.15));
}

/* Add a subtle bounce effect when nodes settle after being dragged */
@keyframes node-settle {
  0% {
    transform: scale(1.02);
  }
  100% {
    transform: scale(1);
  }
}

/* Add a subtle pulse effect when nodes are selected */
.react-flow__node.selected {
  animation: node-selected-pulse 2s ease infinite;
  z-index: 1001 !important;
}

@keyframes node-selected-pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(59, 130, 246, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0);
  }
}

/* Node type-specific styling with glowing effects */
.react-flow__node[data-type="person"] {
  filter: drop-shadow(0 0 8px rgba(10, 102, 194, 0.3));
}

.react-flow__node[data-type="organization"] {
  filter: drop-shadow(0 0 8px rgba(5, 118, 66, 0.3));
}

.react-flow__node[data-type="event"] {
  filter: drop-shadow(0 0 8px rgba(188, 31, 39, 0.3));
}

.react-flow__node[data-type="venue"] {
  filter: drop-shadow(0 0 8px rgba(92, 63, 197, 0.3));
}

/* Enhanced edge styling with glow effects */
.react-flow__edge {
  transition: all 0.2s cubic-bezier(0.25, 0.1, 0.25, 1);
  pointer-events: all;
  filter: drop-shadow(0 0 3px rgba(59, 130, 246, 0.4));
}

.react-flow__edge-path {
  stroke: #3b82f6;
  stroke-width: 3;
  filter: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1));
  transition: all 0.2s cubic-bezier(0.25, 0.1, 0.25, 1);
  stroke-dasharray: 10, 5;
}

.react-flow__edge.animated .react-flow__edge-path {
  stroke-dasharray: 10, 5;
  animation: flowAnimation 1s linear infinite;
  stroke: #3b82f6;
}

.react-flow__edge.selected .react-flow__edge-path {
  stroke: #2563eb;
  stroke-width: 4;
  filter: drop-shadow(0 0 5px rgba(37, 99, 235, 0.5));
  animation: selectedEdgePulse 1s ease infinite;
}

/* Edge interaction states */
.react-flow__edge:hover .react-flow__edge-path {
  stroke: #2563eb;
  stroke-width: 4;
  filter: drop-shadow(0 0 8px rgba(37, 99, 235, 0.6));
}

/* Pulsing animation for selected edges */
@keyframes selectedEdgePulse {
  0% {
    stroke-width: 4;
    filter: drop-shadow(0 0 3px rgba(37, 99, 235, 0.5));
  }
  50% {
    stroke-width: 5;
    filter: drop-shadow(0 0 8px rgba(37, 99, 235, 0.7));
  }
  100% {
    stroke-width: 4;
    filter: drop-shadow(0 0 3px rgba(37, 99, 235, 0.5));
  }
}

/* Improve edge animation */
@keyframes flowAnimation {
  from {
    stroke-dashoffset: 30;
  }
  to {
    stroke-dashoffset: 0;
  }
}

/* Ensure edges stay connected during node movement */
.react-flow__edge-path, 
.react-flow__connection-path {
  transition: none !important;
  pointer-events: all;
}

/* Make handles extremely visible and ensure they work with connections */
.react-flow__handle {
  width: 16px !important;
  height: 16px !important;
  background-color: #3b82f6 !important;
  border: 3px solid white !important;
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.5), 0 2px 4px rgba(0, 0, 0, 0.3) !important;
  transition: transform 0.2s ease, background-color 0.2s ease, box-shadow 0.2s ease !important;
  z-index: 1000 !important;
  animation: handlePulse 1.5s infinite !important;
  opacity: 1 !important;
  visibility: visible !important;
  position: absolute !important;
  border-radius: 50% !important;
  pointer-events: all !important;
  cursor: crosshair !important;
}

/* Ensure handles are positioned correctly */
.react-flow__handle-top {
  top: -8px !important;
  left: 50% !important;
  transform: translate(-50%, 0) !important;
}

.react-flow__handle-right {
  right: -8px !important;
  top: 50% !important;
  transform: translate(0, -50%) !important;
}

.react-flow__handle-bottom {
  bottom: -8px !important;
  left: 50% !important;
  transform: translate(-50%, 0) !important;
}

.react-flow__handle-left {
  left: -8px !important;
  top: 50% !important;
  transform: translate(0, -50%) !important;
}

.react-flow__handle:hover {
  background: #2563eb !important;
  transform: scale(1.4) !important;
  z-index: 2000 !important;
  box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.6), 0 2px 4px rgba(0, 0, 0, 0.3) !important;
}

.react-flow__handle-top:hover {
  transform: translate(-50%, 0) scale(1.4) !important;
}

.react-flow__handle-right:hover {
  transform: translate(0, -50%) scale(1.4) !important;
}

.react-flow__handle-bottom:hover {
  transform: translate(-50%, 0) scale(1.4) !important;
}

.react-flow__handle-left:hover {
  transform: translate(0, -50%) scale(1.4) !important;
}

/* Pulsing animation for handles - more noticeable */
@keyframes handlePulse {
  0% {
    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.8), 0 2px 4px rgba(0, 0, 0, 0.3) !important;
  }
  70% {
    box-shadow: 0 0 0 8px rgba(59, 130, 246, 0), 0 2px 4px rgba(0, 0, 0, 0.3) !important;
  }
  100% {
    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0), 0 2px 4px rgba(0, 0, 0, 0.3) !important;
  }
}

/* Ensure handles are visible on all nodes */
.react-flow__node {
  z-index: 1 !important;
}

/* Ensure handles are visible on all nodes */
.react-flow__node .react-flow__handle {
  opacity: 1 !important;
  visibility: visible !important;
  display: block !important;
}

/* Ensure source and target handles are both visible */
.react-flow__handle.source,
.react-flow__handle.target {
  opacity: 1 !important;
  visibility: visible !important;
}

/* Ensure connection lines connect to handles properly */
.react-flow__connection {
  z-index: 1000;
  pointer-events: none;
}

/* Ensure connection lines are visible */
.react-flow__connection-path {
  stroke: #3b82f6 !important;
  stroke-width: 3 !important;
  stroke-dasharray: 8, 4 !important;
  animation: flowAnimation 1s linear infinite !important;
  filter: drop-shadow(0 0 4px rgba(59, 130, 246, 0.5)) !important;
}

/* Enhanced background */
.react-flow__background {
  background-color: #f8fafc;
  background-image: 
    radial-gradient(#e2e8f0 1px, transparent 1px),
    radial-gradient(#e2e8f0 1px, transparent 1px);
  background-size: 20px 20px;
  background-position: 0 0, 10px 10px;
}

/* Sidebar Custom Styles */
[data-sidebar="header"] {
  @apply text-sm font-medium;
}

[data-sidebar="trigger"] svg {
  @apply transition-transform duration-200;
}

[data-sidebar="trigger"][data-state="collapsed"] svg {
  @apply rotate-180;
}

[data-sidebar="menu"] {
  @apply space-y-0.5;
}

[data-sidebar="menu-button"] {
  @apply text-[13px] font-medium;
}

[data-sidebar="group"] {
  @apply p-1.5;
}

[data-sidebar="group-label"] {
  @apply px-2 py-1.5 text-[11px] font-semibold tracking-wide uppercase text-muted-foreground;
}

[data-sidebar="menu-button"] svg {
  @apply w-[18px] h-[18px] opacity-70;
}

[data-sidebar="menu-button"]:hover svg {
  @apply opacity-100;
}

[data-sidebar="sidebar"] {
  @apply bg-background text-foreground;
}

/* Progress bar indeterminate animation */
@keyframes progress-indeterminate {
  0% {
    transform: translateX(-100%);
    width: 40%;
  }
  50% {
    width: 70%;
  }
  100% {
    transform: translateX(100%);
    width: 40%;
  }
}

.animate-progress-indeterminate {
  animation: progress-indeterminate 2s infinite linear;
}

/* Subtle network icon pulse animation */
@keyframes network-pulse {
  0% {
    opacity: 0.15;
    transform: scale(0.95);
  }
  50% {
    opacity: 0.3;
    transform: scale(1.05);
  }
  100% {
    opacity: 0.15;
    transform: scale(0.95);
  }
}

.animate-network-pulse {
  animation: network-pulse 3s infinite ease-in-out;
}
